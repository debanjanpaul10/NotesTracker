name: Build and Deploy NotesTracker

env:
    API_PROJECT_PATH: NotesTracker.API/NotesTracker.API.csproj
    WEB_PROJECT_PATH: NotesTracker.Web
    DATABASE_PROJECT_PATH: NotesTracker.Database/NotesTracker.Database.sqlproj

on:
    workflow_dispatch:
        inputs:
            deploy_api:
                description: "NotesTracker.API"
                required: false
                default: true
                type: boolean

            deploy_web:
                description: "NotesTracker.Web"
                required: false
                default: true
                type: boolean

            deploy_database:
                description: "NotesTracker.Database"
                required: false
                default: true
                type: boolean

jobs:

    build-api:
        name: Build NotesTracker.API
        runs-on: ubuntu-latest
        if: ${{ inputs.deploy_api }}
        outputs:
            artifact_path: ${{ steps.set-artifact-path.outputs.path }}
        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Set up .NET
              uses: actions/setup-dotnet@v3
              with:
                  dotnet-version: "9.0.x"

            - name: Install dependencies and build Solution
              run: |
                  dotnet restore ${{ env.API_PROJECT_PATH }}
                  dotnet build ${{ env.API_PROJECT_PATH }} --configuration Release --no-restore

            - name: Publish the project
              run: |
                  dotnet publish ${{ env.API_PROJECT_PATH }} --configuration Release --no-build --output ./publish-api

            - name: Set artifact path
              id: set-artifact-path
              run: echo "path=./publish-api" >> $GITHUB_OUTPUT

            - name: Upload API Artifact
              uses: actions/upload-artifact@v4
              with:
                  name: api-artifact
                  path: ./publish-api

    deploy-api:
        name: Deploy NotesTracker.API
        runs-on: ubuntu-latest
        needs: build-api
        environment: Laboratory
        steps:
            - name: Download API Artifact
              uses: actions/download-artifact@v4
              with:
                  name: api-artifact
                  path: ./publish-api

            - name: Deploy to Azure App Service
              uses: Azure/webapps-deploy@v2
              with:
                app-name: app-webapi-notes-tracker
                slot-name: production
                publish-profile: ${{ secrets.AZURE_WEBAPI_PUBLISH_PROFILE }}
                package: ./publish-api



    build-and-deploy-web:
        name: "Build and Deploy NotesTracker.Web"
        if: ${{ inputs.deploy_web }}
        runs-on: ubuntu-latest
        environment: Laboratory

        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Set up Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: "20.x"

            - name: Install dependencies and build Web
              run: |
                  cd ${{ env.WEB_PROJECT_PATH }}
                  npm install
                  npm run build

            - name: Deploy Web to Azure Web App
              uses: Azure/static-web-apps-deploy@v1
              with:
                  azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_TOKEN }}
                  action: "upload"
                  app_location: ${{ env.WEB_PROJECT_PATH }}
                  output_location: "dist/notes-tracker-web/browser"


    build-database:
        name: Build NotesTracker.Database
        runs-on: windows-latest
        if: ${{ inputs.deploy_database }}
        outputs:
            artifact_path: ${{ steps.set-artifact-path.outputs.path }}

        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Setup .NET
              uses: actions/setup-dotnet@v3
              with:
                  dotnet-version: "9.0.x"

            - name: Install dependencies and build solution
              run: |
                  dotnet restore ${{ env.DATABASE_PROJECT_PATH }}
                  dotnet build ${{ env.DATABASE_PROJECT_PATH }} --configuration Release --no-restore

            - name: Publish the dacpac file
              run: |
                  dotnet publish ${{ env.DATABASE_PROJECT_PATH }} --configuration Release --output ./publish-db

            - name: Set artifact path
              id: set-artifact-path
              run: echo "path=./publish-db" >> $GITHUB_OUTPUT

            - name: Upload Database Artifact
              uses: actions/upload-artifact@v4
              with:
                  name: db-artifact
                  path: ./publish-db

    deploy-database:
        name: Deploy NotesTracker.Database
        runs-on: windows-latest
        needs: build-database
        environment: Laboratory
        permissions:
            id-token: write
        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Azure Login
              uses: azure/login@v2
              with:
                client-id: ${{ secrets.AZURE_CLIENT_ID }}
                tenant-id: ${{ secrets.AZURE_TENANT_ID }}
                subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

            - name: Download Database Artifact
              uses: actions/download-artifact@v4
              with:
                  name: db-artifact
                  path: ./publish-db

            - name: Deploy to Azure SQL Server
              uses: azure/sql-action@v2.3
              with:
                connection-string: ${{ secrets.AZURE_SQL_CONNECTION_STRING }}
                path: "./publish-db/NotesTracker.Database.dacpac"
                action: "publish"
                arguments: "/p:DropObjectsNotInSource=true"


